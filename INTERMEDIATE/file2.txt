#include <stdio.h>

int main()
{
    FILE *fp;      // FILE being structure so created a; pointer of this type too.
    char ch;

    fp = fopen("naman.c", "r");       // returning address of first character stored in structure FILE.
    while(1)
    {
        ch = fgetc(fp);       // getting character and pointing to next one.
        if(ch == EOF){
            break;
        }
        printf("%c", ch);
    }
    printf("\n");
    fclose(fp);
    return 0;
}
_________________________________________________________________________________________
#include <stdio.h>
#include <stdlib.h>
int main()
{     // trouble in opening a file.
    FILE *fp;      
    char ch;

    fp = fopen("naman.c", "r"); 

    if (fp == NULL){       // if not opened due to some reasons.
        printf("Cannot open file\n");
        exit(1);
    }      
    else{
    while(1)
    {
        ch = fgetc(fp);       
        if(ch == EOF){
            break;
        }
        printf("%c", ch);
    }
    }
    printf("\n");
    fclose(fp);
    return 0;
}
_______________________________________________________________________________________
#include <stdio.h>
#include <stdlib.h>
int main()
{     // counting characters like Tabs, Spaces.
    FILE *fp;      
    char ch;
    int noc=0, not=0, nol=0, nos=0;

    fp = fopen("naman.c", "r"); 

    if (fp == NULL){       // if not opened due to some reasons.
        printf("Cannot open file\n");
        exit(1);
    }      
    else{
    while(1)
    {
        ch = fgetc(fp);       
        if(ch == EOF){
            break;
        }
        noc++;
        if (ch ==' '){
            nos++;
        }
        else if (ch == '\n'){
            nol++;
        }
        else if (ch == '\t'){
            not++;
        }
    }
    }
    fclose(fp);
    printf("Number of characters = %d\n", noc);
    printf("Number of blanks = %d\n", nos);
    printf("Number of Tabs = %d\n", not);
    printf("Number of lines = %d\n", nol);
    return 0;
}
_______________________________________________________________________________________
#include <stdio.h>
#include <stdlib.h>
int main()
{     // A file copy program.
    FILE *fs, *ft;      
    char ch;

    fs = fopen("naman.c", "r"); 

    if (fs == NULL){       // if not opened due to some reasons.
        puts("Cannot open file\n");
        exit(1);
    }

    ft = fopen("demo.c", "w");

    if (ft == NULL){      // if not opened due to some reasons.
        puts("Cannot open file\n");
        fclose(fs);
        exit(2);
    }  
    while(1){
        ch = fgetc(fs);
        if (ch == EOF){
            break;
        }
        else{
            fputc(ch, ft);
        }
    }

    fclose(fs);    // demo.c named file is created here.
    fclose(ft);
    return 0;
}
______________________________________________________________________________________
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

int main()

{     // string I/O in Files.
    FILE *fs;      
    char s[80];

    fs = fopen("text.txt", "w"); 

    if (fs == NULL){       // if not opened due to some reasons.
        puts("Cannot open file\n");
        exit(1);
    }

    printf("\nEnter a few lines of text:\n");
    while (strlen(gets(s)) > 0){
        fputs(s, fs);   //fputs() doesn't add the new line character to the end of string so we need to add it here.
        fputs("\n", fs);
    }
    fclose(fs);
    return 0;
}
_______________________________________________________________________________________
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
/*reads sting from the file and displays them on screen.*/
int main()

{    // string I/O in Files.
    FILE *fs;      
    char s[80];

    fs = fopen("text.txt", "r"); 

    if (fs == NULL){       // if not opened due to some reasons.
        puts("Cannot open file\n");
        exit(1);
    }

    while (fgets(s, 79, fs) != NULL)
    {

        printf("%s", s);
    }
    printf("\n");
    fclose(fs);
    return 0;
}
_______________________________________________________________________________________
#include <stdio.h>
#include <stdlib.h>
# include<conio.h>
#include <string.h>
/*write record to a file using structures. */
int main()

{    // string I/O in Files.
    FILE *fs;      
    char another = 'Y';
    struct emp
    {
        char name[40];
        int age;
        float bs;
    };
    struct emp e;

    fs = fopen("text.txt", "w"); 

    if (fs == NULL){       // if not opened due to some reasons.
        puts("Cannot open file\n");
        exit(1);
    }

    while (another == 'Y')
    {
        printf("\nEnter name, age and basic salary: ");
        scanf("%s %d %f", e.name, &e.age, &e.bs);
        fprintf(fs, "%s %d %f\n", e.name, e.age, e.bs);

        printf("Add another record(Y/N)");
        fflush(stdin);
        another=getche();
    }

    fclose(fs);
    return 0;
}
_______________________________________________________________________________________
#include <stdio.h>
#include <stdlib.h>
# include<conio.h>
#include <string.h>
/* reads records from a file using structure. */
int main()

{    // string I/O in Files.
    FILE *fs;      
    char another = 'Y';
    struct emp
    {
        char name[40];
        int age;
        float bs;
    };
    struct emp e;

    fs = fopen("text.txt", "r"); 

    if (fs == NULL){       // if not opened due to some reasons.
        puts("Cannot open file\n");
        exit(1);
    }

    while (fscanf(fs, "%s %d %f", e.name, &e.age, &e.bs) != EOF)  // file se structure ke components me convert karke.
    {
        
        printf("%s %d %f\n", e.name, e.age, e.bs);

    }

    fclose(fs);
    return 0;
}
_______________________________________________________________________________________
#include <stdio.h>
#include <stdlib.h>
# include<conio.h>
#include <string.h>
/* Text FIles & Binary Files */
int main()

{    
    FILE *fs, *ft; 
    int ch;     

    fs = fopen("pr1.exe", "rb"); 

    if (fs == NULL){       // if not opened due to some reasons.
        puts("Cannot open soure file.\n");
        exit(1);
    }
    ft = fopen("pr2.exe", "wb");
    if (ft == NULL){
        puts("Cannot open target file.\n");
        fclose(fs);
        exit(2);
    }

    while (1)  // file se structure ke components me convert karke.
    {
        ch = fgetc(fs);
        if (ch == EOF){
            break;
        }
        else{
            fputc(ch, ft);
        }
    }

    fclose(fs);
    fclose(ft);
    return 0;
}
_______________________________________________________________________________________
#include <stdio.h>
#include <stdlib.h>
# include<conio.h>
#include <string.h>
/* Text FIles & Binary Files */
int main()

{    
    FILE *fs, *ft; 
    int ch;     

    fs = fopen("pr1.exe", "rb"); 

    if (fs == NULL){       // if not opened due to some reasons.
        puts("Cannot open soure file.\n");
        exit(1);
    }
    ft = fopen("pr2.exe", "wb");
    if (ft == NULL){
        puts("Cannot open target file.\n");
        fclose(fs);
        exit(2);
    }

    while (1)  // file se structure ke components me convert karke.
    {
        ch = fgetc(fs);
        if (ch == EOF){
            break;
        }
        else{
            fputc(ch, ft);
        }
    }

    fclose(fs);
    fclose(ft);
    return 0;
}
_______________________________________________________________________________________
#include <stdio.h>
#include <stdlib.h>
# include<conio.h>
#include <string.h>
/* Text FIles & Binary Files */
int main()

{    
    FILE *fs; 
    char another = 'Y';
    struct emp
    {
        char name[40];
        int age;
        float bs;
    };
    struct emp e;

    fs = fopen("pr1.exe", "wb"); 

    if (fs == NULL){       // if not opened due to some reasons.
        puts("Cannot open soure file.\n");
        exit(1);
    }
    
    while (another == 'Y')  // file se structure ke components me convert karke.
    {
        printf("\nEnter name, age, basic salary.");
        scanf("%s %d %f", e.name, &e.age, &e.bs);
        fwrite(&e, sizeof(e), 1, fs);

        printf("Add another record (Y/N): ");
        fflush(stdin);
        another = getche();
    }

    fclose(fs);
    return 0;
}
______________________________________________________________________________________
#include <stdio.h>
#include <stdlib.h>
# include<conio.h>
#include <string.h>
/* Records record from binary file and displays them on screen*/
int main()

{    
    FILE *fs; 
    char another = 'Y';
    struct emp
    {
        char name[40];
        int age;
        float bs;
    };
    struct emp e;

    fs = fopen("pr1.exe", "rb"); 

    if (fs == NULL){       // if not opened due to some reasons.
        puts("Cannot open soure file.\n");
        exit(1);
    }
    
    while (fread(&e, sizeof(e), 1, fs) == 1)  // return 0 when can't read anything.
    {
        printf("%s %d %f\n", e.name, e.age, e.bs);
    }

    fclose(fs);
    return 0;
}
______________________________________________________________________________________
#include <stdio.h>
#include <stdlib.h>
#include<conio.h>
#include <string.h>
int main()
{
    FILE *fp, *ft;
    char another, choice;
    struct emp
    {
        char name[40];
        int age;
        float bs;
    };
    struct emp e;
    char empname[40];
    long int recsize;

    fp = fopen("emp.dat", "rb+");

    if (fp == NULL){

        fp = fopen("emp.dat", "wb+");

        if (fp == NULL){
            puts("Cannot open file\n");
            exit(1);
        }
    }

    recsize = sizeof(e);
    // printf("1.Add Rcord\n2. List Records\n3. Modify Records\n4. Delete Records\n0. Exit\nChoose Your option.");

    while(1){

        system("cls");
        printf("1.Add Rcord\n2. List Records\n3. Modify Records\n4. Delete Records\n0. Exit\nChoose Your option.");


        fflush(stdin);
        choice = getche();
        switch(choice)
        {
            case '1':

            fseek(fp, 0, SEEK_END);
            another = 'Y';

            while (another == 'Y')
            {
                printf("Enter name, age and basic salary");
                scanf("%s %d %f", e.name, &e.age, &e.bs);
                fwrite(&e, recsize, 1, fp);
                printf("\nAdd another Record(Y/N)");
                fflush(stdin);
                another = getche();
            }

            break;

            case '2':

            rewind(fp);
            while(fread(&e, recsize, 1, fp) == 1){
                printf("\n%s %d %f", e.name, e.age, e.bs);
            }
            getche();

            break;
        

            case '3':

            another = 'Y';
            while (another == 'Y'){
                printf("\nEnter name of employee to modify");
                scanf("%s", empname);

                rewind(fp);
                while(fread(&e, recsize, 1, fp) == 1){
                    if (strcmp(e.name, empname) == 0){
                        printf("\nEnter new name, age & bs");
                        scanf("%s %d %f", e.name, &e.age, &e.bs);
                        fseek(fp, -recsize, SEEK_CUR); //pointer piche gyaa
                        fwrite(&e, recsize, 1, fp); // overwrite kar diyaa.
                        break;
                    }
                }

                printf("\nModify another Record(Y/N)");
                fflush(stdin);
                another = getche();
                getche();
            }
            break;

            case '4':
            another = 'Y';
            while (another == 'Y'){
                printf("\nEnter name of employee to delete");
                scanf("%s", empname);

                ft = fopen("temp.dat", "wb");

                rewind(fp);
                while(fread(&e, recsize, 1, fp) == 1)
                {
                    if (strcmp(e.name, empname) != 0){
                        fwrite(&e, recsize, 1, ft);
                    }
                }

                fclose(fp);
                fclose(ft);
                remove("emp.dat");
                rename("temp.dat", "emp.dat");
                fp = fopen("emp.dat", "rb+");
                printf("Delete another Record(Y/N)");
                fflush(stdin);
                another = getche();
            }

            break;


            case '0':
            fclose(fp);
            exit(0);
        }
    }
    return 0;
}
_______________________________________________________________________________________
#include <stdio.h>
#include <fcntl.h>
#include <sys\\types.h>
#include <sys\\stat.h>
#include <stdlib.h>

/*Low level file - copy program which copies text, .com, .exe files.*/
int main()
{
    char buffer[512], source[128], target[128];
    int inhandle, outhandle, bytes;
    printf("\nEnter source file name");
    gets(source);

    inhandle = open(source, O_RDONLY|O_BINARY);
    if (inhandle == -1){
        puts("Cannot open file");
        exit(1);
    }

    printf("\nEnter target file");
    gets(target);

    outhandle = open(target, O_CREAT | O_BINARY| O_WRONLY, S_IWRITE);

    if (outhandle == -1)
    {
        puts("Cannot open file");
        close(inhandle);
        exit(2);
    }

    while(1)
    {
        bytes = read(inhandle, buffer, 512);
        if (bytes > 0){
            write(outhandle, buffer, bytes);
        
        }
        else{
            break;
        }
    }

    close(inhandle);     // binary data is copied from emp.dat to target.emp;
    close(outhandle);
    return 0;
}
____________