 {

    int arr[3][3][3];

    printf("%u %u %u\n", arr, arr+1, arr+2);
    printf("%u %u %u\n", arr[0], arr[0]+1, arr[1]);
    printf("%u %u %u\n", arr[1][1], arr[1][0]+1, arr[0][1]);
    return 0;

    /*Ouput:
    6422196 6422232 6422268
6422196 6422208 6422232
6422244 6422236 6422208*/
}

________________________________________________________________________________________

#include<stdio.h>
int main()
{
    static int a[3][3][3] = {
        {
            1,2,3,
            4,5,6,
            7,8,9
        },
        {
            2,4,6,
            8,10,12,
            14,16,18
        },
        {
            3,6,9,
            12,15,18,
            21,24,27
        }
    };

    static int *ptr[] = {
        a[0][0], a[0][1], a[0][2],
        a[1][0], a[1][1], a[1][2],
        a[2][0], a[2][1], a[2][2]
    };

    int *ptr1[] = { a[0], a[1], a[2]};
    int **ptr2 = ptr, i;

    printf("\n");
    for (i =0;i<=8;i++){
        printf("%d ", *ptr2);
        ptr2++;
    }

    printf("\n");
    for (int i =0;i<=2;i++){
        printf("%d ", *(ptr1[i]));
    }

    printf("\n");
    for (int i=0;i<=8;i++){
        printf("%d ", *ptr[i]);
    }
    return 0;

}
/*Output:

4210720 4210732 4210744 4210756 4210768 4210780 4210792 4210804 4210816 
1 2 3 
1 4 7 2 8 14 3 12 21 */
______________________________________________________________________________________

{
    int a[3][3][2] = {
        {
            1,2,
            3,4,
            5,6
        },
        {
            3,4,
            1,2,
            5,6
        },
        {
            5,6,
            3,4,
            1,2
        }
    };
    printf("%d %d %d\n", *(*(a[0] + 2) + 1), *(*(*(a+2)+1)+1), *(a[1][2]+1));
    return 0;
//Output:
// 6 4 6
}
_____________________________________________________________________________________
{
    static int a[] = {0, 1, 2, 3, 4};
    static int *p[] = {a, a+1, a+2, a+1, a+4, a+3};
    int **ptr;

    ptr = p;
    **++ptr;

    printf("%d %d %d\n", **ptr, ptr-p, *ptr-a);
    return 0;
}
/*Output:
1 1 1
*/